{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "123adfdemo"
		},
		"LinkedServiceStorageAccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceStorageAccount'"
		},
		"RestServiceSuccFact_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestServiceSuccFact'"
		},
		"HttpLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://www.dneonline.com/calculator.asmx"
		},
		"RestServiceSuccFact_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api2.successfactors.eu/odata/v2"
		},
		"RestServiceSuccFact_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "SPECADMSF@specSF2DEV"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GitDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SuccessFactor1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CallLogicAppSF",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-94.eastus.logic.azure.com/workflows/db4e5cabbd9e4b7d998dfde5fba13bd3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=YR5hrXrmL-d-f4TuGJBq1iTFmb7a5o9-alDFyuBKB1Q",
							"method": "GET",
							"headers": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AFPO call",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://cem4ssodamig01.uat.az.specsavers.com:8001/soa-infra/services/CommonServices/EventHandlerPublisherComposite/EventHandlerPublisherComposite_ep?WSDL",
							"method": "POST",
							"headers": {},
							"body": "<env:Envelope xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\">\n<env:Header/>\n<env:Body>\n<ns2:eventMessages \txmlns:ns2=\"http://xmlns.oracle.com/EventDetails\">\n<ns2:header>\n<serviceName>CLSP_UK_NetTotals</serviceName>\n<callingComponent>MPP-->ODI-->OpenAccounts</callingComponent>\n<eventID>1000</eventID>\n<eventType>ErrorEvent</eventType>\n<GUID>1000</GUID>\n<isDetailsRequired>\n<isDetailsRequired>Y</isDetailsRequired>\n<queryDetailsBy>1</queryDetailsBy>\n</isDetailsRequired>\n<spQueryId/>\n</ns2:header>\n<ns2:eventMessage>\n<ns2:errorEvent>\n<instanceId>1000</instanceId>\n<errorCode>Error Occuurred</errorCode>\n<errorDetails>Error Occurred</errorDetails>\n<timeStamp/>\n<errorSummary>Error Occured in step</errorSummary>\n<payload/>\n<ns2:logging>\n<isError/>\n<loggingFileName/>\n<loggingFileLocation/>\n<loggingStorageType>DB</loggingStorageType>\n<isLoggingRequired>Y</isLoggingRequired>\n<loggingSummary>Error Occured</loggingSummary>\n<loggingDetails>Loogg details</loggingDetails>\n</ns2:logging>\n<ns2:notification>\n<isError>Y</isError>\n<imBody/>\n<imTo/>\n<voiceMessage/>\n<smsSubject/>\n<smsTo/>\n<smsFrom/>\n<smsBody/>\n<emailSubject>Error processing  1000 transactions File for UK NetTotals</emailSubject>\n<emailBody>Email Body</emailBody>\n<emailID/>\n<isEmailPeriodic/>\n<isEmail>Y</isEmail>\n<isSMS/>\n<isIM/>\n<isVoice/>\n<isHumanIntervention/>\n<humanWorkflowGroups/>\n<humanTaskDetails/>\n<isNotificationRequired>Y</isNotificationRequired>\n<notificationSubject>Error Occured</notificationSubject>\n<notificationDetails>1000</notificationDetails>\n<isPNGeneric/>\n</ns2:notification>\n</ns2:errorEvent>\n<ns2:customEvent>\n<customMessage/>\n</ns2:customEvent>\n</ns2:eventMessage>\n</ns2:eventMessages>\n</env:Body>\n</env:Envelope>"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-27T11:54:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "send-email",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-40.eastus.logic.azure.com:443/workflows/ca0fd2d74a1345db8979865c10d75f91/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=BNqC0W3dIcCpbf26HxBAg5ktrAFozKCJr3tkk6pnlfM",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"title\": \"PIPELINE RUN FINISHED\",\n    \"message\": \"DEMO FINISHED RUNNING SUCCESSFULLY\",\n    \"color\": \"Green\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcnow()}\"\n}pipeline().Pipeline",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-11T08:30:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpLinkedService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceStorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServiceStorageAccount_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceSuccFact')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceSuccFact_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestServiceSuccFact_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestServiceSuccFact_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BankAccount')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "UK_BankAcc.CSV",
						"folderPath": "Input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "STOREID",
						"type": "String"
					},
					{
						"name": "BANKACCOUNT",
						"type": "String"
					},
					{
						"name": "CURRENCY",
						"type": "String"
					},
					{
						"name": "TERRITORYID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClaimsInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BACS_Claims_Detail_20200925.csv",
						"folderPath": "Input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "orderId",
						"type": "String"
					},
					{
						"name": "payDate",
						"type": "String"
					},
					{
						"name": "clientuserId",
						"type": "String"
					},
					{
						"name": "accountId",
						"type": "String"
					},
					{
						"name": "originalBacsTransactionId",
						"type": "String"
					},
					{
						"name": "orderStatus",
						"type": "String"
					},
					{
						"name": "transactionId",
						"type": "String"
					},
					{
						"name": "parentTransactionId",
						"type": "String"
					},
					{
						"name": "createdDate",
						"type": "String"
					},
					{
						"name": "transactionType",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "transactionStatus",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "linked_transactionId",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "reasonCode",
						"type": "String"
					},
					{
						"name": "paymentDate",
						"type": "String"
					},
					{
						"name": "effectiveDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BACS_Collections_Detail_20201028.csv",
						"folderPath": "Input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "orderId",
						"type": "String"
					},
					{
						"name": "payDate",
						"type": "String"
					},
					{
						"name": "clientuserId",
						"type": "String"
					},
					{
						"name": "accountId",
						"type": "String"
					},
					{
						"name": "storeid",
						"type": "String"
					},
					{
						"name": "originalBacsTransactionId",
						"type": "String"
					},
					{
						"name": "orderStatus",
						"type": "String"
					},
					{
						"name": "transactionId",
						"type": "String"
					},
					{
						"name": "parentTransactionId",
						"type": "String"
					},
					{
						"name": "createdDate",
						"type": "String"
					},
					{
						"name": "transactionType",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "Number"
					},
					{
						"name": "transactionStatus",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "linked_transactionId",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "reasonCode",
						"type": "String"
					},
					{
						"name": "paymentDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputDatasetTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Output",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "AccountNo.",
						"type": "String"
					},
					{
						"name": "Reference",
						"type": "String"
					},
					{
						"name": "DR_CR",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					},
					{
						"name": "Transcode",
						"type": "String"
					},
					{
						"name": "Offset_Account",
						"type": "String"
					},
					{
						"name": "BatchId",
						"type": "String"
					},
					{
						"name": "XrefType",
						"type": "String"
					},
					{
						"name": "XrefId",
						"type": "String"
					},
					{
						"name": "Extra",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sample1.json",
						"folderPath": "Output",
						"container": "adfdemo"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NostroBankAcc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "UK_NostroBankAcc.csv",
						"folderPath": "Input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TERRITORYID",
						"type": "String"
					},
					{
						"name": "NOSTRO_ACCOUNT",
						"type": "String"
					},
					{
						"name": "TERRITORY_CURRENCY",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Output",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceSuccFact",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceSuccFact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFOutPutFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SFFile.json",
						"folderPath": "Output",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SoapDataSetBinary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SoapSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Output",
						"container": "adfdemo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SOAPService')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SoapRequisition",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-type:text/xml;charset=UTF-8\nSOAPAction:\"http://tempuri.org/Add\"",
									"requestBody": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <tem:Add>\n         <tem:intA>10</tem:intA>\n         <tem:intB>15</tem:intB>\n      </tem:Add>\n   </soapenv:Body>\n</soapenv:Envelope>",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SoapDataSetBinary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SoapSinkDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-17T08:37:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SoapDataSetBinary')]",
				"[concat(variables('factoryId'), '/datasets/SoapSinkDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SuccessFactor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopydataFromSF",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		}
	]
}